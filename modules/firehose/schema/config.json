{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "state": {
      "type": "string",
      "enum": [
        "RUNNING",
        "STOPPED"
      ],
      "default": "RUNNING"
    },
    "chart_version": {
      "type": "string"
    },
    "stop_time": {
      "type": "string",
      "format": "date-time"
    },
    "firehose": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "number",
          "default": 1,
          "minimum": 1
        },
        "kafka_broker_address": {
          "type": "string"
        },
        "kafka_topic": {
          "type": "string"
        },
        "kafka_consumer_id": {
          "type": "string"
        },
        "env_variables": {
          "type": "object",
          "properties": {
            "SINK_TYPE": {
              "type": "string",
              "enum": [
                "LOG",
                "HTTP"
              ]
            },
            "KAFKA_RECORD_PARSER_MODE": {
              "type": "string"
            },
            "INPUT_SCHEMA_PROTO_CLASS": {
              "type": "string"
            }
          },
          "additionalProperties": {
            "type": "string"
          },
          "required": [
            "SINK_TYPE",
            "KAFKA_RECORD_PARSER_MODE",
            "INPUT_SCHEMA_PROTO_CLASS"
          ],
          "allOf": [
            {
              "if": {
                "properties": {
                  "SINK_TYPE": {
                    "const": "HTTP"
                  }
                },
                "required": [
                  "SINK_TYPE"
                ]
              },
              "then": {
                "properties": {
                  "SINK_HTTP_RETRY_STATUS_CODE_RANGES": {
                    "type": "string"
                  },
                  "SINK_HTTP_REQUEST_LOG_STATUS_CODE_RANGES": {
                    "type": "string"
                  },
                  "SINK_HTTP_REQUEST_TIMEOUT_MS": {
                    "type": "number"
                  },
                  "SINK_HTTP_REQUEST_METHOD": {
                    "type": "string",
                    "enum": [
                      "put",
                      "post"
                    ]
                  },
                  "SINK_HTTP_MAX_CONNECTIONS": {
                    "type": "number"
                  },
                  "SINK_HTTP_SERVICE_URL": {
                    "type": "string"
                  },
                  "SINK_HTTP_HEADERS": {
                    "type": "string"
                  },
                  "SINK_HTTP_PARAMETER_SOURCE": {
                    "type": "string",
                    "enum": [
                      "key",
                      "message",
                      "disabled"
                    ]
                  },
                  "SINK_HTTP_DATA_FORMAT": {
                    "type": "string",
                    "enum": [
                      "proto",
                      "json"
                    ]
                  },
                  "SINK_HTTP_OAUTH2_ENABLE": {
                    "type": "boolean"
                  },
                  "SINK_HTTP_OAUTH2_ACCESS_TOKEN_URL": {
                    "type": "string"
                  },
                  "SINK_HTTP_OAUTH2_CLIENT_NAME": {
                    "type": "string"
                  },
                  "SINK_HTTP_OAUTH2_CLIENT_SECRET": {
                    "type": "string"
                  },
                  "SINK_HTTP_OAUTH2_SCOPE": {
                    "type": "string"
                  },
                  "SINK_HTTP_JSON_BODY_TEMPLATE": {
                    "type": "string"
                  },
                  "SINK_HTTP_PARAMETER_PLACEMENT": {
                    "type": "string",
                    "enum": [
                      "query",
                      "header"
                    ]
                  },
                  "SINK_HTTP_PARAMETER_SCHEMA_PROTO_CLASS": {
                    "type": "string"
                  }
                },
                "required": [
                  "SINK_HTTP_PARAMETER_SCHEMA_PROTO_CLASS",
                  "SINK_HTTP_PARAMETER_PLACEMENT",
                  "SINK_HTTP_JSON_BODY_TEMPLATE",
                  "SINK_HTTP_OAUTH2_SCOPE",
                  "SINK_HTTP_OAUTH2_CLIENT_SECRET",
                  "SINK_HTTP_OAUTH2_CLIENT_NAME",
                  "SINK_HTTP_OAUTH2_ACCESS_TOKEN_URL",
                  "SINK_HTTP_OAUTH2_ENABLE",
                  "SINK_HTTP_DATA_FORMAT",
                  "SINK_HTTP_PARAMETER_SOURCE",
                  "SINK_HTTP_HEADERS",
                  "SINK_HTTP_SERVICE_URL",
                  "SINK_HTTP_MAX_CONNECTIONS",
                  "SINK_HTTP_REQUEST_METHOD",
                  "SINK_HTTP_REQUEST_TIMEOUT_MS",
                  "SINK_HTTP_REQUEST_LOG_STATUS_CODE_RANGES",
                  "SINK_HTTP_RETRY_STATUS_CODE_RANGES"
                ]
              }
            }
          ]
        }
      },
      "required": [
        "replicas",
        "env_variables",
        "kafka_broker_address",
        "kafka_topic",
        "kafka_consumer_id"
      ]
    },
    "telegraf": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "config": {
          "type": "object",
          "properties": {
            "output": {
              "type": "object",
              "properties": {
                "prometheus_remote_write": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    },
                    "url": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "enabled",
                    "url",
                    "version"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "required": [
    "firehose"
  ]
}